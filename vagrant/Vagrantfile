# -*- mode: ruby -*-
# vi: set ft=ruby :

# Needs vagrant plugin vagrant-communicator-docker
require File.dirname(__FILE__)+"/dependency_manager.rb"

check_plugins ["vagrant-communicator-docker"]

# Hotfix for DHCP-Error in vagrant 2.2.7 and VirtualBox 6.1.x
class VagrantPlugins::ProviderVirtualBox::Action::Network
  def dhcp_server_matches_config?(dhcp_server, config)
    true
  end
end

Vagrant.configure("2") do |config|

  # OpenDJ
  config.vm.define "opendj", autostart: true do |od|
    #Container has no shell
    if Vagrant.has_plugin?("vagrant-proxyconf")
      od.proxy.enabled = false
    end

    # initial data
    od.vm.synced_folder "./opendj-bootstrap/data", "/opt/opendj/bootstrap/data"
    # schema
    #od.vm.synced_folder "./opendj-bootstrap/schema", "/opt/opendj/bootstrap/schema"
    # data
    od.vm.synced_folder "../opendj-data", "/opt/opendj/data"

    od.vm.provider "docker" do |d|
      d.image = "openidentityplatform/opendj:4.4.15"
      d.name = "midpoint_playground_opendj"
      #d.has_ssh = true
      d.ports = ["10389:1389", "10636:1636"]
      d.env = {
        "BASE_DN" => "dc=myorg,dc=com",
        "ROOT_PASSWORD" => "Welcome1"
      }
    end
  end

  # Postgres
  config.vm.define "postgres", autostart: true do |pg|
    #Container has no shell
    if Vagrant.has_plugin?("vagrant-proxyconf")
      pg.proxy.enabled = false
    end

    pg.vm.synced_folder "../postgres-data", "/var/lib/postgresql/data"

    pg.vm.provider "docker" do |d|
      d.image = "postgres:13-alpine"
      d.name = "midpoint_playground_postgres"
      #d.has_ssh = true
      d.ports = ["5432:5432"]
      d.env = {
        "POSTGRES_PASSWORD_FILE" => "/vagrant/mp_database_password.txt",
        "POSTGRES_USER" => "midpoint",
        "POSTGRES_INITDB_ARGS" => "--lc-collate=en_US.utf8 --lc-ctype=en_US.utf8",
        "PGDATA" => "/var/lib/postgresql/data/pgdata"
      }
    end
  end

  # Midpoint
  config.vm.define "midpoint", autostart: true do |mp|
    #Container has no shell
    if Vagrant.has_plugin?("vagrant-proxyconf")
      mp.proxy.enabled = false
    end

    mp.vm.synced_folder "../midpoint-home", "/opt/midpoint/var"
    #mp.vm.synced_folder "../idm-project/objects", "/opt/midpoint-dirs-docker-entrypoint"
    
    mp.vm.provider "docker" do |d|
      d.image = "evolveum/midpoint:4.4.2-alpine"
      #d.has_ssh = true
      d.ports = ["8080:8080"]
      d.link ("midpoint_playground_opendj:opendj")
      d.link ("midpoint_playground_postgres:postgres")
      d.env = {
        "MP_MEM_MAX" => "4096m",
        "MP_MEM_INIT" => "2048m",
        "MP_ENTRY_POINT" => "/opt/midpoint-dirs-docker-entrypoint",
        "REPO_DATABASE_TYPE" => "postgresql",
        "REPO_HOST" => "postgres",
        "REPO_DATABASE" => "midpoint",
        "REPO_USER" => "midpoint",
        "REPO_PASSWORD_FILE" => "/vagrant/mp_database_password.txt",
        "REPO_MISSING_SCHEMA_ACTION" => "create", 
        "REPO_UPGRADEABLE_SCHEMA_ACTION" => "upgrade",
      }
    end
  end

end

